---
# Tâches pour gérer les associations EPG-Domain avec read_csv
- name: "Read CSV EPG to Domain"
  read_csv:
    path: "{{ csv_dir }}/epg_to_domain.csv"
    delimiter: ','
  register: epg_to_domain_csv
  when: (csv_dir + '/epg_to_domain.csv') is file

- name: "Afficher les associations EPG-Domain détectées"
  debug:
    msg: "Associations EPG-Domain à traiter: {{ epg_to_domain_csv.list | map(attribute='epg') | list }}"
  when: epg_to_domain_csv is defined and epg_to_domain_csv.list is defined

- name: "{{ item.epg }}-{{ item.domain }} - Associer EPG au Domain ACI"
  cisco.aci.aci_epg_to_domain:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    annotation: ""
    use_ssl: true
    tenant: "{{ item.tenant }}"
    ap: "{{ item.ap }}"
    epg: "{{ item.epg }}"
    domain: "{{ item.domain }}"
    domain_type: "{{ item.domain_type }}"
    vm_provider: "{{ item.vm_provider | default(omit) }}"
    encap_mode: "{{ item.encap_mode | default('auto') }}"
    encap: "{{ item.encap if item.encap is defined and item.encap and item.encap != 'null' else omit }}"
    primary_encap: "{{ item.primary_encap | default(omit) }}"
    netflow: "{{ item.netflow | default(false) }}"
    allow_useg: "{{ item.allow_useg | default('encap') }}"
    deploy_immediacy: "{{ item.deploy_immediacy | default('lazy') }}"
    resolution_immediacy: "{{ item.resolution_immediacy | default('lazy') }}"
    state: "{{ item.state | default(global_state) }}"
  loop: "{{ epg_to_domain_csv.list }}"
  when: 
    - epg_to_domain_csv is defined
    - epg_to_domain_csv.list is defined
    - item.tenant is defined
    - item.tenant | length > 0
    - item.ap is defined
    - item.ap | length > 0
    - item.epg is defined
    - item.epg | length > 0
    - item.domain is defined
    - item.domain | length > 0
    - item.domain_type is defined
    - item.domain_type | length > 0
  tags:
    - epg_to_domain
    - aci_epg_to_domain
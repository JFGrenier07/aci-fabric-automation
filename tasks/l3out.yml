---
# Tâches pour gérer les L3Out (Layer 3 Outside) avec read_csv
- name: "Read CSV L3Out"
  read_csv:
    path: "{{ csv_dir }}/l3out.csv"
    delimiter: ','
  register: l3out_csv
  when: (csv_dir + '/l3out.csv') is file

- name: "Afficher les L3Out détectés"
  debug:
    msg: "L3Out à traiter: {{ l3out_csv.list | map(attribute='l3out') | list }}"
  when: l3out_csv is defined and l3out_csv.list is defined

- name: "{{ item.l3out }} - Créer L3Out ACI"
  cisco.aci.aci_l3out:
    host: "{{ aci_hostname }}"
    username: "{{ aci_username }}"
    password: "{{ aci_password }}"
    validate_certs: "{{ aci_validate_certs | default(false) }}"
    annotation: ""
    use_ssl: true
    tenant: "{{ item.tenant }}"
    l3out: "{{ item.l3out }}"
    domain: "{{ item.domain }}"
    vrf: "{{ item.vrf }}"
    description: "{{ item.description | default(omit) }}"
    dscp: "{{ item.dscp | default('unspecified') }}"
    route_control: "{{ item.route_control | default(['export']) }}"
    mpls: "{{ item.mpls | default('no') }}"
    l3protocol: "{{ item.l3protocol | default(['static']) }}"
    asn: "{{ item.asn | default(omit) }}"
    state: "{{ item.state | default(global_state) }}"
  loop: "{{ l3out_csv.list }}"
  when: 
    - l3out_csv is defined
    - l3out_csv.list is defined
    - item.l3out is defined
    - item.l3out | length > 0
    - item.tenant is defined
    - item.tenant | length > 0
    - item.domain is defined
    - item.domain | length > 0
    - item.vrf is defined
    - item.vrf | length > 0
  tags:
    - l3out
    - aci_l3out
    - layer3